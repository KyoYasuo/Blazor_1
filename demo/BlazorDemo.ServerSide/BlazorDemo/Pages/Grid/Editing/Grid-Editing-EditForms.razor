@page "/Grid/EditData/EditForms"
@layout DataProviderAccessArea<INwindDataProvider>

<DemoPageSectionComponent Id="Grid-Editing-EditForms" ShowSizeMode="true" ShowKeyboardNavigationSwitcher="true">
    <ChildContentWithParameters Context="Params">
        @inject NwindDataService NwindDataService

        <DxGrid @ref="Grid"
                Data="DataSource"
                PageSize="12"
                KeyFieldName="EmployeeId"
                ValidationEnabled="false"
                CustomizeEditModel="Grid_CustomizeEditModel"
                EditModelSaving="Grid_EditModelSaving"
                DataItemDeleting="Grid_DataItemDeleting"
                PopupEditFormCssClass="pw-800"
                EditMode="@CurrentEditMode"
                SizeMode="Params.SizeMode" KeyboardNavigationEnabled="Params.KeyboardNavigationEnabled">
            <Columns>
                <DxGridCommandColumn Width="160px" />
                <DxGridDataColumn FieldName="FirstName" MinWidth="80" />
                <DxGridDataColumn FieldName="LastName" MinWidth="80" />
                <DxGridDataColumn FieldName="Title" MinWidth="100" />
                <DxGridDataColumn FieldName="TitleOfCourtesy" MinWidth="120" />
                <DxGridDataColumn FieldName="BirthDate" Width="10%" MinWidth="80" />
                <DxGridDataColumn FieldName="HireDate" Width="10%" MinWidth="80" />
            </Columns>
            <EditFormTemplate Context="EditFormContext">
                <DxFormLayout CssClass="w-100">
                    <DxFormLayoutItem Caption="First Name:" ColSpanMd="6">
                        @EditFormContext.GetEditor("FirstName")
                    </DxFormLayoutItem>
                    <DxFormLayoutItem Caption="Last Name:" ColSpanMd="6">
                        @EditFormContext.GetEditor("LastName")
                    </DxFormLayoutItem>
                    <DxFormLayoutItem Caption="Title:" ColSpanMd="6">
                        @EditFormContext.GetEditor("Title")
                    </DxFormLayoutItem>
                    <DxFormLayoutItem Caption="Title of Courtesy:" ColSpanMd="6">
                        @EditFormContext.GetEditor("TitleOfCourtesy")
                    </DxFormLayoutItem>
                    <DxFormLayoutItem Caption="Birth Date:" ColSpanMd="6">
                        @EditFormContext.GetEditor("BirthDate")
                    </DxFormLayoutItem>
                    <DxFormLayoutItem Caption="Hire Date:" ColSpanMd="6">
                        @EditFormContext.GetEditor("HireDate")
                    </DxFormLayoutItem>
                </DxFormLayout>
            </EditFormTemplate>
        </DxGrid>
    </ChildContentWithParameters>
    <OptionsContent>
        <OptionCheckBox Label="Use Popup Edit Form"
                        Checked="UsePopupEditForm"
                        CheckedChanged="new Func<bool, Task>(UsePopupEditForm_CheckedChanged)"
        />
    </OptionsContent>

    @code {
        IEnumerable<EditableEmployee> DataSource { get; set; }
        IGrid Grid { get; set; }
        bool UsePopupEditForm { get; set; }
        GridEditMode CurrentEditMode { get { return UsePopupEditForm ? GridEditMode.PopupEditForm : GridEditMode.EditForm; } }

        async Task UsePopupEditForm_CheckedChanged(bool value) {
            UsePopupEditForm = value;
            await Grid.CancelEditAsync();
        }

        protected override async Task OnInitializedAsync() {
            DataSource = await NwindDataService.GetEmployeesEditableAsync();
        }
        protected override async Task OnAfterRenderAsync(bool firstRender) {
            if(firstRender)
                await Grid.StartEditRowAsync(0);
        }
        void Grid_CustomizeEditModel(GridCustomizeEditModelEventArgs e) {
            if(e.IsNew) {
                var newEmployee = (EditableEmployee)e.EditModel;
                newEmployee.FirstName = "John";
                newEmployee.LastName = "Doe";
            }
        }
        async Task Grid_EditModelSaving(GridEditModelSavingEventArgs e) {
            var editableEmployee = (EditableEmployee)e.EditModel;

            if(e.IsNew)
                await NwindDataService.InsertEmployeeAsync(editableEmployee);
            else
                await NwindDataService.UpdateEmployeeAsync((EditableEmployee)e.DataItem, editableEmployee);
            await UpdateDataAsync();
        }
        async Task Grid_DataItemDeleting(GridDataItemDeletingEventArgs e) {
            await NwindDataService.RemoveEmployeeAsync((EditableEmployee)e.DataItem);
            await UpdateDataAsync();
        }
        async Task UpdateDataAsync() {
            DataSource = await NwindDataService.GetEmployeesEditableAsync();
        }
    }
</DemoPageSectionComponent>
